<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.businessmanager.db.dao.LogDAO">
  <resultMap id="BaseResultMap" type="com.businessmanager.db.dto.LogDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="log_id" jdbcType="INTEGER" property="id" />
    <result column="log_business_id" jdbcType="INTEGER" property="businessId" />
    <result column="log_provider_id" jdbcType="INTEGER" property="providerId" />
    <result column="log_action_type_id" jdbcType="INTEGER" property="actionTypeId" />
    <result column="log_market_id" jdbcType="INTEGER" property="marketId" />
    <result column="log_product_id" jdbcType="INTEGER" property="productId" />
    <result column="log_quantity" jdbcType="DOUBLE" property="quantity" />
    <result column="log_price" jdbcType="DOUBLE" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    log.id as log_id, log.business_id as log_business_id, log.provider_id as log_provider_id, 
    log.action_type_id as log_action_type_id, log.market_id as log_market_id, log.product_id as log_product_id, 
    log.quantity as log_quantity, log.price as log_price
  </sql>
  <select id="selectByExample" parameterType="com.businessmanager.db.dto.LogCondition" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from log log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="groupByClause != null">
      group by ${groupByClause}
    </if>
    <if test="limitClause != null">
      limit ${limitClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from log log
    where log.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.businessmanager.db.dto.LogCondition">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.businessmanager.db.dto.LogDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log (business_id, provider_id, action_type_id, 
      market_id, product_id, quantity, 
      price)
    values (#{businessId,jdbcType=INTEGER}, #{providerId,jdbcType=INTEGER}, #{actionTypeId,jdbcType=INTEGER}, 
      #{marketId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{quantity,jdbcType=DOUBLE}, 
      #{price,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.businessmanager.db.dto.LogDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        business_id,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="actionTypeId != null">
        action_type_id,
      </if>
      <if test="marketId != null">
        market_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="actionTypeId != null">
        #{actionTypeId,jdbcType=INTEGER},
      </if>
      <if test="marketId != null">
        #{marketId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.businessmanager.db.dto.LogCondition" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from log log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update log log
    <set>
      <if test="record.id != null">
        log.id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.businessId != null">
        log.business_id = #{record.businessId,jdbcType=INTEGER},
      </if>
      <if test="record.providerId != null">
        log.provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.actionTypeId != null">
        log.action_type_id = #{record.actionTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.marketId != null">
        log.market_id = #{record.marketId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        log.product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        log.quantity = #{record.quantity,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        log.price = #{record.price,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update log log
    set log.id = #{record.id,jdbcType=INTEGER},
      log.business_id = #{record.businessId,jdbcType=INTEGER},
      log.provider_id = #{record.providerId,jdbcType=INTEGER},
      log.action_type_id = #{record.actionTypeId,jdbcType=INTEGER},
      log.market_id = #{record.marketId,jdbcType=INTEGER},
      log.product_id = #{record.productId,jdbcType=INTEGER},
      log.quantity = #{record.quantity,jdbcType=DOUBLE},
      log.price = #{record.price,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.businessmanager.db.dto.LogDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update log
    <set>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="actionTypeId != null">
        action_type_id = #{actionTypeId,jdbcType=INTEGER},
      </if>
      <if test="marketId != null">
        market_id = #{marketId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.businessmanager.db.dto.LogDto">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update log
    set business_id = #{businessId,jdbcType=INTEGER},
      provider_id = #{providerId,jdbcType=INTEGER},
      action_type_id = #{actionTypeId,jdbcType=INTEGER},
      market_id = #{marketId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertList" parameterType="java.util.List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    INSERT INTO log (business_id, provider_id, action_type_id, market_id, product_id, quantity, price) VALUES
    <foreach close=")" collection="recordList" item="parm" open="(" separator="),(">
      #{parm.businessId}, #{parm.providerId}, #{parm.actionTypeId}, #{parm.marketId}, #{parm.productId}, #{parm.quantity}, #{parm.price}
    </foreach>
  </insert>
</mapper>